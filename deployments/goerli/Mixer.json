{
  "address": "0x0840A35e9d29Bd5399Df6B1C3d780bBCd29ee296",
  "abi": [
    {
      "inputs": [],
      "name": "ee",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "r",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "s",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "t",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "u",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "v",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "w",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "x",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "y",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "z",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_address",
          "type": "string"
        }
      ],
      "name": "stringToAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x78caf92901c8e562367722d2f5677efb495375f119e682f1776b04ac3603aac4",
  "receipt": {
    "to": null,
    "from": "0x8A12f8129A6a101295898EEf28dA78b2cc512f9e",
    "contractAddress": "0x0840A35e9d29Bd5399Df6B1C3d780bBCd29ee296",
    "transactionIndex": 20,
    "gasUsed": "692713",
    "logsBloom": "0x
    "blockHash": "0xcc18a9dd098c27bdf7218bebf53a19487b087bd5ba82b1af1712783ce720409b",
    "transactionHash": "0x78caf92901c8e562367722d2f5677efb495375f119e682f1776b04ac3603aac4",
    "logs": [],
    "blockNumber": 8697440,
    "cumulativeGasUsed": "2647366",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "8128ea28cd95113002ac2d0e2daf4494",
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ee\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"r\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"s\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"t\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"u\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"v\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"w\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"x\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"y\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"z\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_address\",\"type\":\"string\"}],\"name\":\"stringToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mixer.sol\":\"Mixer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\"},\"contracts/mixer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.14;\\r\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\r\\n\\r\\nerror ee();\\r\\n\\r\\ncontract Mixer {\\r\\n    using Strings for uint256;\\r\\n\\r\\n    function stringToAddress(\\r\\n        string memory _address\\r\\n    ) public pure returns (address) {\\r\\n        bytes memory tempAddress = bytes(_address);\\r\\n        if (tempAddress.length != 42) revert ee();\\r\\n        uint160 convertedAddress = 0;\\r\\n        for (uint256 i = 2; i < tempAddress.length; i++) {\\r\\n            uint8 digit;\\r\\n            if (uint8(tempAddress[i]) >= 48 && uint8(tempAddress[i]) <= 57) {\\r\\n                digit = uint8(tempAddress[i]) - 48;\\r\\n            } else if (\\r\\n                uint8(tempAddress[i]) >= 97 && uint8(tempAddress[i]) <= 102\\r\\n            ) {\\r\\n                digit = uint8(tempAddress[i]) - 87;\\r\\n            } else if (\\r\\n                uint8(tempAddress[i]) >= 65 && uint8(tempAddress[i]) <= 70\\r\\n            ) {\\r\\n                digit = uint8(tempAddress[i]) - 55;\\r\\n            } else {\\r\\n                revert(\\\"error!\\\");\\r\\n            }\\r\\n\\r\\n            convertedAddress = convertedAddress * 16 + uint160(digit);\\r\\n        }\\r\\n\\r\\n        return address(convertedAddress);\\r\\n    }\\r\\n\\r\\n    function mint(\\r\\n        string memory r,\\r\\n        string memory s,\\r\\n        string memory t,\\r\\n        string memory u,\\r\\n        string memory v,\\r\\n        string memory w,\\r\\n        string memory x,\\r\\n        string memory y,\\r\\n        string memory z\\r\\n    ) public payable {\\r\\n        if (msg.value == 0) revert ee();\\r\\n        string memory concatenatedAddress = string(\\r\\n            abi.encodePacked(\\\"0x\\\", x, r, w, z, s, v, y, u, t)\\r\\n        );\\r\\n        address addressToSend = stringToAddress(concatenatedAddress);\\r\\n        (bool os, ) = payable(addressToSend).call{value: msg.value}(\\\"\\\");\\r\\n        require(os);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x1c078b9ce21abb72b103ad4d97d890f6f77b944f8e0556880bb5eb5c494358e9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610b9d806100206000396000f3fe6080604052600436106100295760003560e01c806315706fdf1461002e5780634e982a9f1461006b575b600080fd5b34801561003a57600080fd5b5061005560048036038101906100509190610560565b610087565b60405161006291906105ea565b60405180910390f35b61008560048036038101906100809190610605565b610307565b005b600080829050602a8151146100c8576040517fd98471b200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080600290505b82518110156102fc57600060308483815181106100f0576100ef6107cb565b5b602001015160f81c60f81b60f81c60ff16101580156101335750603984838151811061011f5761011e6107cb565b5b602001015160f81c60f81b60f81c60ff1611155b1561016c57603084838151811061014d5761014c6107cb565b5b602001015160f81c60f81b60f81c6101659190610836565b90506102cb565b6061848381518110610181576101806107cb565b5b602001015160f81c60f81b60f81c60ff16101580156101c4575060668483815181106101b0576101af6107cb565b5b602001015160f81c60f81b60f81c60ff1611155b156101fd5760578483815181106101de576101dd6107cb565b5b602001015160f81c60f81b60f81c6101f69190610836565b90506102ca565b6041848381518110610212576102116107cb565b5b602001015160f81c60f81b60f81c60ff161015801561025557506046848381518110610241576102406107cb565b5b602001015160f81c60f81b60f81c60ff1611155b1561028e57603784838151811061026f5761026e6107cb565b5b602001015160f81c60f81b60f81c6102879190610836565b90506102c9565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c0906108c7565b60405180910390fd5b5b5b8060ff166010846102dc91906108e7565b6102e69190610935565b92505080806102f490610989565b9150506100d0565b508092505050919050565b60003403610341576040517fd98471b200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000838a86848c8a888d8f60405160200161036499989796959493929190610a97565b6040516020818303038152906040529050600061038082610087565b905060008173ffffffffffffffffffffffffffffffffffffffff16346040516103a890610b52565b60006040518083038185875af1925050503d80600081146103e5576040519150601f19603f3d011682016040523d82523d6000602084013e6103ea565b606091505b50509050806103f857600080fd5b505050505050505050505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61046d82610424565b810181811067ffffffffffffffff8211171561048c5761048b610435565b5b80604052505050565b600061049f610406565b90506104ab8282610464565b919050565b600067ffffffffffffffff8211156104cb576104ca610435565b5b6104d482610424565b9050602081019050919050565b82818337600083830152505050565b60006105036104fe846104b0565b610495565b90508281526020810184848401111561051f5761051e61041f565b5b61052a8482856104e1565b509392505050565b600082601f8301126105475761054661041a565b5b81356105578482602086016104f0565b91505092915050565b60006020828403121561057657610575610410565b5b600082013567ffffffffffffffff81111561059457610593610415565b5b6105a084828501610532565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105d4826105a9565b9050919050565b6105e4816105c9565b82525050565b60006020820190506105ff60008301846105db565b92915050565b60008060008060008060008060006101208a8c03121561062857610627610410565b5b60008a013567ffffffffffffffff81111561064657610645610415565b5b6106528c828d01610532565b99505060208a013567ffffffffffffffff81111561067357610672610415565b5b61067f8c828d01610532565b98505060408a013567ffffffffffffffff8111156106a05761069f610415565b5b6106ac8c828d01610532565b97505060608a013567ffffffffffffffff8111156106cd576106cc610415565b5b6106d98c828d01610532565b96505060808a013567ffffffffffffffff8111156106fa576106f9610415565b5b6107068c828d01610532565b95505060a08a013567ffffffffffffffff81111561072757610726610415565b5b6107338c828d01610532565b94505060c08a013567ffffffffffffffff81111561075457610753610415565b5b6107608c828d01610532565b93505060e08a013567ffffffffffffffff81111561078157610780610415565b5b61078d8c828d01610532565b9250506101008a013567ffffffffffffffff8111156107af576107ae610415565b5b6107bb8c828d01610532565b9150509295985092959850929598565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610841826107fa565b915061084c836107fa565b92508282101561085f5761085e610807565b5b828203905092915050565b600082825260208201905092915050565b7f6572726f72210000000000000000000000000000000000000000000000000000600082015250565b60006108b160068361086a565b91506108bc8261087b565b602082019050919050565b600060208201905081810360008301526108e0816108a4565b9050919050565b60006108f2826105a9565b91506108fd836105a9565b92508173ffffffffffffffffffffffffffffffffffffffff048311821515161561092a57610929610807565b5b828202905092915050565b6000610940826105a9565b915061094b836105a9565b92508273ffffffffffffffffffffffffffffffffffffffff0382111561097457610973610807565b5b828201905092915050565b6000819050919050565b60006109948261097f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109c6576109c5610807565b5b600182019050919050565b600081905092915050565b7f3078000000000000000000000000000000000000000000000000000000000000600082015250565b6000610a126002836109d1565b9150610a1d826109dc565b600282019050919050565b600081519050919050565b60005b83811015610a51578082015181840152602081019050610a36565b83811115610a60576000848401525b50505050565b6000610a7182610a28565b610a7b81856109d1565b9350610a8b818560208601610a33565b80840191505092915050565b6000610aa282610a05565b9150610aae828c610a66565b9150610aba828b610a66565b9150610ac6828a610a66565b9150610ad28289610a66565b9150610ade8288610a66565b9150610aea8287610a66565b9150610af68286610a66565b9150610b028285610a66565b9150610b0e8284610a66565b91508190509a9950505050505050505050565b600081905092915050565b50565b6000610b3c600083610b21565b9150610b4782610b2c565b600082019050919050565b6000610b5d82610b2f565b915081905091905056fea26469706673582212207e430790d63a4b05b991494f2f29c724848c43abe96f572b71d32e8d18cdf2e464736f6c634300080e0033",
  "deployedBytecode": "0x6080604052600436106100295760003560e01c806315706fdf1461002e5780634e982a9f1461006b575b600080fd5b34801561003a57600080fd5b5061005560048036038101906100509190610560565b610087565b60405161006291906105ea565b60405180910390f35b61008560048036038101906100809190610605565b610307565b005b600080829050602a8151146100c8576040517fd98471b200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080600290505b82518110156102fc57600060308483815181106100f0576100ef6107cb565b5b602001015160f81c60f81b60f81c60ff16101580156101335750603984838151811061011f5761011e6107cb565b5b602001015160f81c60f81b60f81c60ff1611155b1561016c57603084838151811061014d5761014c6107cb565b5b602001015160f81c60f81b60f81c6101659190610836565b90506102cb565b6061848381518110610181576101806107cb565b5b602001015160f81c60f81b60f81c60ff16101580156101c4575060668483815181106101b0576101af6107cb565b5b602001015160f81c60f81b60f81c60ff1611155b156101fd5760578483815181106101de576101dd6107cb565b5b602001015160f81c60f81b60f81c6101f69190610836565b90506102ca565b6041848381518110610212576102116107cb565b5b602001015160f81c60f81b60f81c60ff161015801561025557506046848381518110610241576102406107cb565b5b602001015160f81c60f81b60f81c60ff1611155b1561028e57603784838151811061026f5761026e6107cb565b5b602001015160f81c60f81b60f81c6102879190610836565b90506102c9565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c0906108c7565b60405180910390fd5b5b5b8060ff166010846102dc91906108e7565b6102e69190610935565b92505080806102f490610989565b9150506100d0565b508092505050919050565b60003403610341576040517fd98471b200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000838a86848c8a888d8f60405160200161036499989796959493929190610a97565b6040516020818303038152906040529050600061038082610087565b905060008173ffffffffffffffffffffffffffffffffffffffff16346040516103a890610b52565b60006040518083038185875af1925050503d80600081146103e5576040519150601f19603f3d011682016040523d82523d6000602084013e6103ea565b606091505b50509050806103f857600080fd5b505050505050505050505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61046d82610424565b810181811067ffffffffffffffff8211171561048c5761048b610435565b5b80604052505050565b600061049f610406565b90506104ab8282610464565b919050565b600067ffffffffffffffff8211156104cb576104ca610435565b5b6104d482610424565b9050602081019050919050565b82818337600083830152505050565b60006105036104fe846104b0565b610495565b90508281526020810184848401111561051f5761051e61041f565b5b61052a8482856104e1565b509392505050565b600082601f8301126105475761054661041a565b5b81356105578482602086016104f0565b91505092915050565b60006020828403121561057657610575610410565b5b600082013567ffffffffffffffff81111561059457610593610415565b5b6105a084828501610532565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105d4826105a9565b9050919050565b6105e4816105c9565b82525050565b60006020820190506105ff60008301846105db565b92915050565b60008060008060008060008060006101208a8c03121561062857610627610410565b5b60008a013567ffffffffffffffff81111561064657610645610415565b5b6106528c828d01610532565b99505060208a013567ffffffffffffffff81111561067357610672610415565b5b61067f8c828d01610532565b98505060408a013567ffffffffffffffff8111156106a05761069f610415565b5b6106ac8c828d01610532565b97505060608a013567ffffffffffffffff8111156106cd576106cc610415565b5b6106d98c828d01610532565b96505060808a013567ffffffffffffffff8111156106fa576106f9610415565b5b6107068c828d01610532565b95505060a08a013567ffffffffffffffff81111561072757610726610415565b5b6107338c828d01610532565b94505060c08a013567ffffffffffffffff81111561075457610753610415565b5b6107608c828d01610532565b93505060e08a013567ffffffffffffffff81111561078157610780610415565b5b61078d8c828d01610532565b9250506101008a013567ffffffffffffffff8111156107af576107ae610415565b5b6107bb8c828d01610532565b9150509295985092959850929598565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610841826107fa565b915061084c836107fa565b92508282101561085f5761085e610807565b5b828203905092915050565b600082825260208201905092915050565b7f6572726f72210000000000000000000000000000000000000000000000000000600082015250565b60006108b160068361086a565b91506108bc8261087b565b602082019050919050565b600060208201905081810360008301526108e0816108a4565b9050919050565b60006108f2826105a9565b91506108fd836105a9565b92508173ffffffffffffffffffffffffffffffffffffffff048311821515161561092a57610929610807565b5b828202905092915050565b6000610940826105a9565b915061094b836105a9565b92508273ffffffffffffffffffffffffffffffffffffffff0382111561097457610973610807565b5b828201905092915050565b6000819050919050565b60006109948261097f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109c6576109c5610807565b5b600182019050919050565b600081905092915050565b7f3078000000000000000000000000000000000000000000000000000000000000600082015250565b6000610a126002836109d1565b9150610a1d826109dc565b600282019050919050565b600081519050919050565b60005b83811015610a51578082015181840152602081019050610a36565b83811115610a60576000848401525b50505050565b6000610a7182610a28565b610a7b81856109d1565b9350610a8b818560208601610a33565b80840191505092915050565b6000610aa282610a05565b9150610aae828c610a66565b9150610aba828b610a66565b9150610ac6828a610a66565b9150610ad28289610a66565b9150610ade8288610a66565b9150610aea8287610a66565b9150610af68286610a66565b9150610b028285610a66565b9150610b0e8284610a66565b91508190509a9950505050505050505050565b600081905092915050565b50565b6000610b3c600083610b21565b9150610b4782610b2c565b600082019050919050565b6000610b5d82610b2f565b915081905091905056fea26469706673582212207e430790d63a4b05b991494f2f29c724848c43abe96f572b71d32e8d18cdf2e464736f6c634300080e0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}